/*
 * m9sweeper dash
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.m9sweeper.trawler.framework.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.m9sweeper.trawler.framework.client.model.ScannerDto;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
/**
 * PolicyWithScannerDto
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-09-28T11:46:20.946110-05:00[America/Chicago]")
public class PolicyWithScannerDto {
  @SerializedName("id")
  private BigDecimal id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("enabled")
  private Boolean enabled = null;

  @SerializedName("enforcement")
  private Boolean enforcement = null;

  @SerializedName("scanners")
  private List<ScannerDto> scanners = new ArrayList<ScannerDto>();

  public PolicyWithScannerDto id(BigDecimal id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(required = true, description = "")
  public BigDecimal getId() {
    return id;
  }

  public void setId(BigDecimal id) {
    this.id = id;
  }

  public PolicyWithScannerDto name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public PolicyWithScannerDto enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @Schema(required = true, description = "")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public PolicyWithScannerDto enforcement(Boolean enforcement) {
    this.enforcement = enforcement;
    return this;
  }

   /**
   * Get enforcement
   * @return enforcement
  **/
  @Schema(required = true, description = "")
  public Boolean isEnforcement() {
    return enforcement;
  }

  public void setEnforcement(Boolean enforcement) {
    this.enforcement = enforcement;
  }

  public PolicyWithScannerDto scanners(List<ScannerDto> scanners) {
    this.scanners = scanners;
    return this;
  }

  public PolicyWithScannerDto addScannersItem(ScannerDto scannersItem) {
    this.scanners.add(scannersItem);
    return this;
  }

   /**
   * Get scanners
   * @return scanners
  **/
  @Schema(required = true, description = "")
  public List<ScannerDto> getScanners() {
    return scanners;
  }

  public void setScanners(List<ScannerDto> scanners) {
    this.scanners = scanners;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PolicyWithScannerDto policyWithScannerDto = (PolicyWithScannerDto) o;
    return Objects.equals(this.id, policyWithScannerDto.id) &&
        Objects.equals(this.name, policyWithScannerDto.name) &&
        Objects.equals(this.enabled, policyWithScannerDto.enabled) &&
        Objects.equals(this.enforcement, policyWithScannerDto.enforcement) &&
        Objects.equals(this.scanners, policyWithScannerDto.scanners);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, enabled, enforcement, scanners);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PolicyWithScannerDto {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    enforcement: ").append(toIndentedString(enforcement)).append("\n");
    sb.append("    scanners: ").append(toIndentedString(scanners)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
