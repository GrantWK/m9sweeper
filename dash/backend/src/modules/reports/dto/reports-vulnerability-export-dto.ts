import { Expose, Transform } from 'class-transformer';
import { IsArray, IsBoolean, IsNumber, IsString } from 'class-validator';
import { VulnerabilitySeverity } from '../../shared/enums/vulnerability-severity';


export class ReportsVulnerabilityExportDto {
    @Expose({name: 'scanner_name'})
    @IsString()
    scannerName: string;

    @Expose({name: 'image_id'})
    @IsNumber()
    imageId: number;

    @Expose({name: 'image'})
    @IsString()
    image: string;

    @Expose({name: 'running_in_cluster'})
    @IsBoolean()
    runningInCluster: boolean;

    @Expose({name: 'type'})
    @IsString()
    type: string;

    /** The overall severity level of a given vulnerability.
     *
     * Note, severity is sometimes returned as 'High' from the database, it is renamed to 'Major' in
     * the class transform for consistency with the existing naming scheme. */
    @Expose({name: 'severity'})
    @Transform(({value: severity}) => severity ? severity.replace('High', 'Major') : undefined, {toClassOnly: true})
    @IsString()
    severity: VulnerabilitySeverity;

    @Expose({name: 'is_fixable'})
    @IsBoolean()
    isFixable: boolean;

    @Expose({name: 'namespaces'})
    @IsArray()
    namespaces: Array<string>;

    @Expose({name: 'data'})
    data;
}
